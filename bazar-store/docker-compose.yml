version: '3'

services:
  # PostgreSQL service
  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=bazarcom
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - bazar-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  # Catalog service
  catalog:
    build: ./catalog
    image: youssefashraf265/bazarcom-catalog:latest
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/bazarcom
      - DOCKER_ENV=true
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bazar-network
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Order service
  order:
    build: ./order
    image: youssefashraf265/bazarcom-order:latest
    ports:
      - "5001:5001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/bazarcom
      - DOCKER_ENV=true
    depends_on:
      postgres:
        condition: service_healthy
      catalog:
        condition: service_started
    networks:
      - bazar-network
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Core service
  core:
    build: ./core
    image: youssefashraf265/bazarcom-core:latest
    ports:
      - "5005:5005"
    environment:
      - DOCKER_ENV=true
      - CATALOG_SERVICE_URL=http://catalog:5000
      - ORDER_SERVICE_URL=http://order:5001
    depends_on:
      catalog:
        condition: service_started
      order:
        condition: service_started
    networks:
      - bazar-network
    restart: on-failure

networks:
  bazar-network:
    driver: bridge

volumes:
  postgres-data:
